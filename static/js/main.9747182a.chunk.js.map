{"version":3,"sources":["components/HelloReact.component.jsx","components/GoodJob.component.jsx","components/WhatIsAComponent.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["HelloReact","props","handleClick","onActivation","state","message","className","this","onClick","Component","GoodJob","clicks","WhatIsAComponent","lineProps","style","wordBreak","whiteSpace","language","dracula","wrapLines","App","incrementReactNumber","num","console","log","setState","reactNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAqCeA,E,kDAlCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,YAAc,WACV,EAAKD,MAAME,aAAa,IAN1B,EAAKC,MAAQ,CACXC,QAAS,eAHM,E,0CAWnB,WACE,OACI,sBAAKC,UAAU,mEAAf,UAII,oBAAIA,UAAU,WAAd,SAA0BC,KAAKH,MAAMC,UACrC,8DACA,uGACA,wBAAQC,UAAU,sFAOlBE,QAASD,KAAKL,YAPd,gC,GArBaO,aCsBVC,E,kDArBb,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,CACXC,QAAS,uDACTM,OAAQ,EAAKV,MAAMU,QAJJ,E,0CAQnB,WACE,OACI,sBAAKL,UAAU,uEAAf,UAGI,oBAAIA,UAAU,UAAd,SAAyBC,KAAKH,MAAMC,UACpC,6BAAKE,KAAKN,MAAMU,SAChB,iH,GAhBUF,a,iBC2DPG,EA3DU,WACrB,OACI,sBAAKN,UAAU,mFAAf,UAKI,2FACA,2FACA,uBAAM,uBACN,cAAC,IAAD,CAAmBA,UAAU,mBAC7BO,UAAW,CAACC,MAAO,CAACC,UAAW,YAAaC,WAAY,aACxDC,SAAS,aAAaH,MAAOI,UAC7BC,WAAW,EAHX,u+BCuBGC,E,kDA5Bb,aAAc,IAAD,8BACX,gBAMFC,qBAAqB,SAACC,GACpBC,QAAQC,IAAI,WACZ,EAAKC,UAAS,SAACrB,GAEb,OADAmB,QAAQC,IAAI,EAAKpB,MAAMsB,aAChB,CAACA,YAAatB,EAAMsB,YAAcJ,OAT3C,EAAKlB,MAAQ,CACXsB,YAAY,GAHH,E,0CAeb,WACE,OACE,sBAAKpB,UAAU,MAAf,UACE,cAAC,EAAD,CAAYH,aAAcI,KAAKc,uBAC/B,cAAC,EAAD,CAASV,OAAQJ,KAAKH,MAAMsB,cAC5B,cAAC,EAAD,W,GArBUjB,aCMHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9747182a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass HelloReact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"Hello Human\",\n    };\n  }\n\n  handleClick = () => {\n      this.props.onActivation(1)\n  }\n\n  render() {\n    return( \n        <div className=\"container border-2 \n        border-dashed\n        w-1/2 m-auto\n        border-purple-700\">\n            <h1 className=\"text-3xl\">{this.state.message}</h1>\n            <p>Let's learn how to use React!</p>\n            <p>Let's start by using the button below to interact between 2 components</p>\n            <button className=\"text-blue-400 \n            text-2xl \n            bg-indigo-100 \n            rounded-lg \n            shadow-md\n            border-none\n            px-8 py-2\"\n            onClick={this.handleClick}\n            >Hello React</button>\n        </div>\n    );\n  }\n}\n\nexport default HelloReact;\n","import React, { Component } from \"react\";\n\nclass GoodJob extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"Each section with a dotted border it's own component\",\n      clicks: this.props.clicks\n    };\n  }\n\n  render() {\n    return( \n        <div className=\"container border-2 \n        border-dashed\n        w-1/2 m-auto mt-10 border-blue-400\">\n            <h1 className=\"text-xl\">{this.state.message}</h1>\n            <h1>{this.props.clicks}</h1>\n            <p>This number increases by 1 every time you click the \"Hello React\" Button!</p>\n        </div>\n    );\n  }\n}\n\nexport default GoodJob;","import SyntaxHighLighter from 'react-syntax-highlighter';\nimport { dracula } from 'react-syntax-highlighter/dist/cjs/styles/hljs';\nconst WhatIsAComponent = () =>{\n    return(\n        <div className=\"container border-2 \n        border-dashed\n        border-red\n        w-3/4 m-auto mt-10\n        border-green-400\">\n            <h4>A Compoment is a function or class that contains JSX code</h4>\n            <span>This 'HelloReact' Component '(Purple)' looks like this:</span>\n            <br /><br />\n            <SyntaxHighLighter className=\"text-left w-auto\" \n            lineProps={{style: {wordBreak: 'break-all', whiteSpace: 'pre-wrap'}}}\n            language=\"javascript\" style={dracula} \n            wrapLines={true}>\n                {`\nimport React, { Component } from \"react\"; \\n\n\nclass HelloReact extends Component {\n    constructor(props) {\n    super(props);\n    this.state = {\n        message: \"Hello Human\",\n    };\n    }\n\n    handleClick = () => {\n        this.props.onActivation(1)\n    }\n\n    render() {\n    return( \n        <div className=\"container border-2 \n        border-dashed\n        w-1/2 m-auto\n        border-purple-700\">\n            <h1 className=\"text-3xl\">{this.state.message}</h1>\n            <p>Let's learn how to use React!</p>\n            <p>Let's start by using the button below to interact between 2 components</p>\n            <button className=\"text-blue-400 \n            text-2xl \n            bg-indigo-100 \n            rounded-lg \n            shadow-md\n            border-none\n            px-8 py-2\"\n            onClick={this.handleClick}\n            >Hello React</button>\n        </div>\n    );\n    }\n}\n\nexport default HelloReact;\n                `}\n            </SyntaxHighLighter>\n        </div>\n    )\n}\n\nexport default WhatIsAComponent;","import './App.css';\nimport React, { Component } from 'react';\nimport HelloReact from './components/HelloReact.component.jsx'\nimport GoodJob from './components/GoodJob.component.jsx'\nimport WhatIsAComponent from './components/WhatIsAComponent.component.jsx'\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      reactNumber:0\n    }\n  }\n  \n  incrementReactNumber=(num)=>{\n    console.log('clicked')\n    this.setState((state)=> {\n      console.log(this.state.reactNumber)\n      return {reactNumber: state.reactNumber + num};\n    });\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <HelloReact onActivation={this.incrementReactNumber}/>\n        <GoodJob clicks={this.state.reactNumber}/>\n        <WhatIsAComponent/>\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}